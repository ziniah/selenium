âœ… Complete Topics to Cover in Practical Code Demo of Browser Window Automation
________________________________________
ðŸ”¸ Demo Website:
ðŸ”— https://the-internet.herokuapp.com/windows
ðŸ”— https://opensource-demo.orangehrmlive.com/web/index.php/auth/login

ðŸ”¹ Basic Flow of Window Handling:
1.	Launch the Chrome browser
2.	Open the target URL
3.	Get the current window handle 
4.	Click the link/button that opens a new window
5.	Fetch all window IDs
6.	Switch to the new window 
7.	Verify the window by checking title or URL
8.	Perform actions in the new window
9.	Close specific window ,if needed
10.	Switch back to original window if required
________________________________________
ðŸ”¹ Additional Key Concepts to Explain:
ðŸ”¸ 1. quit() vs close()
â€¢	close() â†’ closes current focused tab/window only
This closes the currently active browser window (tab or popup) that the WebDriver is controlling.
If multiple browser windows or tabs are open, only the focused one gets closed.
The WebDriver session remains active.
â€¢	quit() â†’ closes all browser windows opened by WebDriver session
This closes all browser windows opened by Selenium.
It also ends the WebDriver session completely.
Used at the end of the script to clean up everything.
Summary Table
Function	What it does	When to use
driver.close()	Closes current active window	When working with multiple windows
driver.quit()	Closes all windows and ends session	At the end of the test script


ðŸ”¸ 2. Difference in switch_to:
Context	Command
Alert	driver.switch_to.alert
Frame	driver.switch_to.frame()
Window	driver.switch_to.window(window_id)
 
ðŸ”¸ 2. Difference in switch_to:
Context	Purpose	Command	Use Case Example
Alert	To handle JavaScript alert/pop-ups	driver.switch_to.alert	Accept, dismiss, get text from alert
Frame	To switch to an iframe or frame	driver.switch_to.frame()	Interact with elements inside an iframe
Window	To switch between browser windows/tabs	driver.switch_to.window(window_id)	Switch to a new tab or popup window

	
ðŸ”¸ 3. Window IDs:
â€¢	driver.current_window_handle â†’ returns ID of current window
â€¢	driver.window_handles â†’ returns list of all open window IDs
ðŸ‘‰ Note: Every time a new window is opened, a new unique window ID is generated by the browser.
ðŸ”¸ 4. Parent vs Child Windows:
â€¢	Selenium doesnâ€™t define "parent" or "child" windows officially.
â€¢	But typically:
o	Parent window is the one that opens first.
o	Child window is opened via a link/button from parent.
o	Identified using the window_handles list order (usually 0 is parent).
o	
________________________________________
